// Generated by CoffeeScript 1.6.3
(function() {
  define(['R', 'Clock'], function(R, Clock) {
    var $playBtn, $stopBtn, fnPlayPause, fnStop, _pause, _play, _stop, _target;
    _target = null;
    $playBtn = $stopBtn = null;
    _play = function() {
      return $playBtn.removeClass('play').addClass('pause').children().removeClass('uk-icon-play').addClass('uk-icon-pause');
    };
    _pause = function() {
      return $playBtn.removeClass('pause').addClass('play').children().removeClass('uk-icon-pause').addClass('uk-icon-play');
    };
    _stop = function() {
      if ($playBtn.hasClass('pause')) {
        _pause();
      }
      return Clock.reset();
    };
    fnPlayPause = function() {
      if ($playBtn.hasClass('play')) {
        _target.postMessage({
          "type": R.key.start_timer,
          "time": R.int.default_time
        });
        return _play();
      } else if ($playBtn.hasClass('pause')) {
        _target.postMessage({
          "type": R.key.pause_timer
        });
        return _pause();
      }
    };
    fnStop = function() {
      _target.postMessage({
        "type": R.key.stop_timer
      });
      return _stop();
    };
    return $(document).ready(function() {
      console.log('init player');
      _target = chrome.runtime.connect();
      $playBtn = $('.play').click(fnPlayPause);
      $stopBtn = $('.stop').click(fnStop);
      return _target.onMessage.addListener(function(req) {
        switch (req.type) {
          case R.key.resume_timer:
            Clock.update(req.secs);
            return _play();
          case R.key.update_clock:
            return Clock.update(req.secs);
          case R.key.end_timer:
            return _stop();
        }
      });
    });
  });

}).call(this);
